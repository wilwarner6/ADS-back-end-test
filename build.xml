<project name="ADS-back-end-test" default="run" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="antlib:org.apache.ivy.ant ">
    <!-- Define properties -->
    <property name="src.dir" value="src"/>
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="dist"/>
    <property name="main.class" value="MainKt"/>
    <property name="kotlin.lib" value="/usr/local/Cellar/kotlin/1.8.21//libexec/lib" />
    <property name="ivy.lib" value="/usr/local/Cellar/ivy/2.5.1/libexec" />
    <property name="lib.dir" value="lib" />
    <property name="test.dir" value="src/test/kotlin" />
    <property name="reports.dir" value="reports/tests" />

    <taskdef uri="antlib:org.apache.ivy.ant" resource="org/apache/ivy/ant/antlib.xml">
        <classpath>
            <pathelement location="${ivy.lib}/ivy-2.5.1.jar"/>
        </classpath>
    </taskdef>

    <taskdef resource="org/apache/ivy/ant/antlib.xml">
        <classpath>
            <pathelement location="${ivy.lib}/ivy-2.5.1.jar"/>
        </classpath>
    </taskdef>

    <target name="resolve" description="Resolve dependencies using Ivy">
        <ivy:resolve/>
        <ivy:retrieve/>
    </target>

    <!-- Define the kotlinc task -->
    <typedef resource="org/jetbrains/kotlin/ant/antlib.xml" classpath="${kotlin.lib}/kotlin-ant.jar"/>

    <path id="kotlin.stdlib.path">
        <fileset dir="${kotlin.lib}">
            <include name="kotlin-stdlib.jar" />
        </fileset>
    </path>

    <target name="compile" depends="resolve">
        <mkdir dir="${build.dir}/classes" />
        <!-- Define the kotlinc task -->
        <kotlinc src="${src.dir}" output="${build.dir}/classes" includeRuntime="false">
            <classpath>
                <fileset dir="lib/">
                    <include name="*.jar" />
                </fileset>
                <fileset dir="${kotlin.lib}">
                    <include name="kotlin-stdlib.jar" />
                </fileset>
            </classpath>
        </kotlinc>
    </target>

    <!-- Define task targets -->
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${reports.dir}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${reports.dir}"/>
    </target>

    <target name="run" depends="compile">
        <java classname="${main.class}" fork="true">
            <classpath>
                <path refid="kotlin.stdlib.path"/>
                <pathelement path="${build.dir}/classes"/>
            </classpath>
        </java>
    </target>

    <target name="jar" depends="compile">
        <jar destfile="${dist.dir}/ADS-back-end-test.jar">
            <fileset dir="${build.dir}/classes"/>
            <restrict>
                <name name="**/*.class"/>
                <archives>
                    <zips>
                        <fileset dir="lib" includes="**/*.jar"/>
                        <fileset dir="${kotlin.lib}">
                            <include name="kotlin-stdlib.jar" />
                        </fileset>
                    </zips>
                </archives>
            </restrict>
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
        </jar>
    </target>

    <target name="test" depends="compile-test">
        <mkdir dir="${reports.dir}" />
        <junit printsummary="yes">
            <classpath>
                <pathelement path="${build.dir}/classes" />
                <fileset dir="${lib.dir}" includes="*.jar" />
                <fileset dir="${kotlin.lib}">
                    <include name="kotlin-stdlib.jar" />
                </fileset>
            </classpath>
            <formatter type="plain" />
            <batchtest todir="${reports.dir}">
                <fileset dir="${build.dir}/classes">
                    <include name="*Test*.class" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Define the compile-test target -->
    <target name="compile-test" depends="compile">
        <javac srcdir="${test.dir}" destdir="${build.dir}" includeantruntime="false">
            <classpath>
                <pathelement path="${build.dir}" />
                <fileset dir="${lib.dir}" includes="*.jar" />
            </classpath>
        </javac>
    </target>

    <!-- Default target -->
    <target name="default" depends="clean, run"/>

</project>

